#!/bin/sh

# These values have to be configured.
HOST=
REMOTE_USER=
PASS_USER=


# These values may be configured
INTERFACE=vpn
PID_FILE=/run/openconnect_${INTERFACE}.pid
PASS_PATH="${HOST}/${REMOTE_USER}/password"
CONFIG=$XDG_CONFIG_HOME/vpn-script/config


exit_error()
{
    if [ -n "$1" ]; then
       echo 'Unknown error encountered. Exiting.'
    else
       echo $1
    fi
    exit 1
}

# Read arguments from commandline
while [ -n "$1" ]; do
    case $1 in
        start)
            cmd='start_vpn'
            shift
            ;;
        stop)
            cmd='stop_vpn'
            shift
            ;;
        status)
            cmd='show_status'
            shift
            ;;
        --config)
            CONFIG=$2
            shift 2
            if [ $? -ne 0 ]; then
                exit_error "Please supply a file name."
            fi
            if [[ ! -e ${CONFIG} ]]; then
                exit_error "Unknown file."
            fi
            ;;
        *)
            exit_error "Unrecognized token."
            ;;
    esac
done

show_status()
{
	if [[ -e ${PID_FILE} ]]; then
        echo ON
    else
        echo OFF
    fi
}

PASS_CMD='pass $PASS_PATH | head -n1'
PASSWORD_CMD="if [[ $(whoami) == ${PASS_USER} ]]; then eval ${PASS_CMD}; else su ${PASS_USER} -c \"${PASS_CMD}\"; fi"
START_VPN="${PASSWORD_CMD} | sudo /usr/bin/openconnect --background --pid-file='${PID_FILE}' --interface='${INTERFACE}' --user='${REMOTE_USER}' --script='/etc/vpnc/vpnc-script-new' --passwd-on-stdin ${HOST}"
start_vpn()
{
    if [[ -e ${PID_FILE} ]]; then
        echo VPN already started.
    else
        echo Starting.
        eval $START_VPN >/dev/null
    fi
}

STOP_VPN='sudo kill -INT $(cat ${PID_FILE})'
stop_vpn()
{
    if [[ -e ${PID_FILE} ]]; then
        echo Stopping
        eval $STOP_VPN
    else
        echo VPN was not started.
    fi
}

# source config last to enable overwriting any variable
source $CONFIG

# Run the command chosen beforehand
if [[ -n "$cmd" ]]; then
    $cmd  # Execute chosen cmd
else
    show_status
fi
