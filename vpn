#!/bin/sh

exit_error()
{
    if [ -n "$1" ]; then
       echo $1
    else
       echo 'Unknown error encountered. Exiting.'
    fi
    exit 1
}

usage()
{
    echo "Usage:
    vpn [start|stop|status]
    Options:
    --config <file>     Use non-default config file.
    --help              Print this help.
    "
}

# Read arguments from commandline
while [ -n "$1" ]; do
    case $1 in
        start)
            cmd='start_vpn'
            shift
            ;;
        stop)
            cmd='stop_vpn'
            shift
            ;;
        status)
            cmd='show_status'
            shift
            ;;
        --config)
            CONFIG=$2
            shift 2 &>/dev/null
            if [ $? -ne 0 ]; then
                exit_error 'Please supply a file name.'
            fi
            if [[ ! -e ${CONFIG} ]]; then
                exit_error 'Unknown file.'
            fi
            ;;
        --help)
            usage
            exit
            ;;
        *)
            usage
            exit_error 'Unrecognized token.'
            ;;
    esac
done

# source config last to enable overwriting any variable
CONFIG=${XDG_CONFIG_HOME}/vpn-script/config
source $CONFIG

# These values have to be configured.
[ -n "$HOST" ] || HOST=vpn.example.com
[ -n "$REMOTE_USER" ] || REMOTE_USER=user.name


# These values may be configured
[ -n "$INTERFACE" ] || INTERFACE=vpn
[ -n "$PID_FILE" ] || PID_FILE=/run/openconnect_${INTERFACE}.pid
[ -n "$PASSWORD" ] || PASSWORD=password

show_status()
{
	if [[ -e ${PID_FILE} ]]; then
        echo ON
    else
        echo OFF
    fi
}

START_VPN='echo ${PASSWORD} | sudo /usr/bin/openconnect --background --pid-file=${PID_FILE} --interface=${INTERFACE} --user=${REMOTE_USER} --script=/etc/vpnc/vpnc-script-new --passwd-on-stdin ${HOST}'
start_vpn()
{
    if [[ -e ${PID_FILE} ]]; then
        echo VPN already started.
    else
        echo Starting.
        eval $START_VPN >/dev/null
    fi
}

STOP_VPN='sudo kill -INT $(cat ${PID_FILE})'
stop_vpn()
{
    if [[ -e ${PID_FILE} ]]; then
        echo Stopping
        eval $STOP_VPN
    else
        echo VPN was not started.
    fi
}

# Run the command chosen beforehand
if [[ -n "$cmd" ]]; then
    $cmd  # Execute chosen cmd
else
    show_status
fi
